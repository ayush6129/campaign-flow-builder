{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Flowchart/FlowchartEditor.tsx"],"sourcesContent":["\"use client\";\nimport React, { useCallback } from \"react\";\nimport {\n  ReactFlow,\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Background,\n  OnNodesChange,\n  OnEdgesChange,\n  OnConnect,\n  applyNodeChanges,\n  applyEdgeChanges,\n  Node,\n  Edge,\n} from \"reactflow\";\nimport \"reactflow/dist/style.css\";\n\ninterface FlowProps {\n  flow: { nodes: Node[]; edges: Edge[] };\n  setFlow: (flow: { nodes: Node[]; edges: Edge[] }) => void;\n}\n\nconst FlowchartEditor = ({ flow, setFlow }: FlowProps) => {\n  const onNodesChange: OnNodesChange = useCallback(\n    (changes) => {\n      setFlow({\n        ...flow,\n        nodes: applyNodeChanges(changes, flow.nodes),\n      });\n    },\n    [flow, setFlow]\n  );\n\n  const onEdgesChange: OnEdgesChange = useCallback(\n    (changes) => {\n      setFlow({\n        ...flow,\n        edges: applyEdgeChanges(changes, flow.edges),\n      });\n    },\n    [flow, setFlow]\n  );\n\n  const onConnect: OnConnect = useCallback(\n    (connection) => {\n      setFlow({\n        ...flow,\n        edges: addEdge(connection, flow.edges),\n      });\n    },\n    [flow, setFlow]\n  );\n\n  const onDragOver = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n  }, []);\n\n  const onDrop = useCallback(\n    (event: React.DragEvent) => {\n      event.preventDefault();\n\n      const type = event.dataTransfer.getData(\"application/reactflow\");\n      if (typeof type === \"undefined\" || !type) {\n        return;\n      }\n\n      const position = {\n        x: event.clientX - 250,\n        y: event.clientY - 100,\n      };\n\n      const newNode: Node = {\n        id: `${type}-${Date.now()}`,\n        type: \"default\",\n        position,\n        data: { \n          label: getNodeLabel(type),\n          nodeType: type \n        },\n        style: {\n          background: getNodeColor(type),\n          color: \"white\",\n          border: \"1px solid #222\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n        },\n      };\n\n      setFlow({\n        ...flow,\n        nodes: [...flow.nodes, newNode],\n      });\n    },\n    [flow, setFlow]\n  );\n\n  const getNodeLabel = (type: string) => {\n    const labels: { [key: string]: string } = {\n      lead: \"Lead Received\",\n      process: \"Process Next\",\n      email: \"Send Email\",\n      whatsapp: \"Send WhatsApp\",\n      call: \"Give Call\",\n    };\n    return labels[type] || type;\n  };\n\n  const getNodeColor = (type: string) => {\n    const colors: { [key: string]: string } = {\n      lead: \"#10b981\",\n      process: \"#3b82f6\",\n      email: \"#f59e0b\",\n      whatsapp: \"#22c55e\",\n      call: \"#ef4444\",\n    };\n    return colors[type] || \"#6b7280\";\n  };\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <ReactFlow\n        nodes={flow.nodes}\n        edges={flow.edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onDrop={onDrop}\n        onDragOver={onDragOver}\n        fitView\n      >\n        <Controls />\n        <Background color=\"#aaa\" gap={16} />\n      </ReactFlow>\n    </div>\n  );\n};\n\nconst FlowchartEditorWrapper = (props: FlowProps) => {\n  return (\n    <ReactFlowProvider>\n      <FlowchartEditor {...props} />\n    </ReactFlowProvider>\n  );\n};\n\nexport default FlowchartEditorWrapper;\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;;;AAFA;;;;AAuBA,MAAM,kBAAkB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAa;;IACnD,MAAM,gBAA+B,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;sDAC7C,CAAC;YACC,QAAQ;gBACN,GAAG,IAAI;gBACP,OAAO,CAAA,GAAA,+JAAA,CAAA,mBAAgB,AAAD,EAAE,SAAS,KAAK,KAAK;YAC7C;QACF;qDACA;QAAC;QAAM;KAAQ;IAGjB,MAAM,gBAA+B,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;sDAC7C,CAAC;YACC,QAAQ;gBACN,GAAG,IAAI;gBACP,OAAO,CAAA,GAAA,+JAAA,CAAA,mBAAgB,AAAD,EAAE,SAAS,KAAK,KAAK;YAC7C;QACF;qDACA;QAAC;QAAM;KAAQ;IAGjB,MAAM,YAAuB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;kDACrC,CAAC;YACC,QAAQ;gBACN,GAAG,IAAI;gBACP,OAAO,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD,EAAE,YAAY,KAAK,KAAK;YACvC;QACF;iDACA;QAAC;QAAM;KAAQ;IAGjB,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;mDAAE,CAAC;YAC9B,MAAM,cAAc;YACpB,MAAM,YAAY,CAAC,UAAU,GAAG;QAClC;kDAAG,EAAE;IAEL,MAAM,SAAS,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+CACvB,CAAC;YACC,MAAM,cAAc;YAEpB,MAAM,OAAO,MAAM,YAAY,CAAC,OAAO,CAAC;YACxC,IAAI,OAAO,SAAS,eAAe,CAAC,MAAM;gBACxC;YACF;YAEA,MAAM,WAAW;gBACf,GAAG,MAAM,OAAO,GAAG;gBACnB,GAAG,MAAM,OAAO,GAAG;YACrB;YAEA,MAAM,UAAgB;gBACpB,IAAI,GAAG,KAAK,CAAC,EAAE,KAAK,GAAG,IAAI;gBAC3B,MAAM;gBACN;gBACA,MAAM;oBACJ,OAAO,aAAa;oBACpB,UAAU;gBACZ;gBACA,OAAO;oBACL,YAAY,aAAa;oBACzB,OAAO;oBACP,QAAQ;oBACR,cAAc;oBACd,SAAS;gBACX;YACF;YAEA,QAAQ;gBACN,GAAG,IAAI;gBACP,OAAO;uBAAI,KAAK,KAAK;oBAAE;iBAAQ;YACjC;QACF;8CACA;QAAC;QAAM;KAAQ;IAGjB,MAAM,eAAe,CAAC;QACpB,MAAM,SAAoC;YACxC,MAAM;YACN,SAAS;YACT,OAAO;YACP,UAAU;YACV,MAAM;QACR;QACA,OAAO,MAAM,CAAC,KAAK,IAAI;IACzB;IAEA,MAAM,eAAe,CAAC;QACpB,MAAM,SAAoC;YACxC,MAAM;YACN,SAAS;YACT,OAAO;YACP,UAAU;YACV,MAAM;QACR;QACA,OAAO,MAAM,CAAC,KAAK,IAAI;IACzB;IAEA,qBACE,6LAAC;QAAI,OAAO;YAAE,OAAO;YAAQ,QAAQ;QAAO;kBAC1C,cAAA,6LAAC,+JAAA,CAAA,YAAS;YACR,OAAO,KAAK,KAAK;YACjB,OAAO,KAAK,KAAK;YACjB,eAAe;YACf,eAAe;YACf,WAAW;YACX,QAAQ;YACR,YAAY;YACZ,OAAO;;8BAEP,6LAAC,mKAAA,CAAA,WAAQ;;;;;8BACT,6LAAC,qKAAA,CAAA,aAAU;oBAAC,OAAM;oBAAO,KAAK;;;;;;;;;;;;;;;;;AAItC;GAlHM;KAAA;AAoHN,MAAM,yBAAyB,CAAC;IAC9B,qBACE,6LAAC,+JAAA,CAAA,oBAAiB;kBAChB,cAAA,6LAAC;YAAiB,GAAG,KAAK;;;;;;;;;;;AAGhC;MANM;uCAQS","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Flowchart/NodePalette.tsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\n\nconst nodesList = [\n  { type: \"lead\", label: \"Lead Received\", color: \"bg-green-500\" },\n  { type: \"process\", label: \"Process Next\", color: \"bg-blue-500\" },\n  { type: \"email\", label: \"Send Email\", color: \"bg-yellow-500\" },\n  { type: \"whatsapp\", label: \"Send WhatsApp\", color: \"bg-green-400\" },\n  { type: \"call\", label: \"Give Call\", color: \"bg-red-500\" },\n];\n\nconst NodePalette = () => {\n  const onDragStart = (event: React.DragEvent, nodeType: string) => {\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\n    event.dataTransfer.effectAllowed = \"move\";\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-lg font-semibold mb-4 text-foreground\">Node Palette</h2>\n      <div className=\"space-y-2\">\n        {nodesList.map((node) => (\n          <div\n            key={node.type}\n            className={`p-3 border rounded-lg cursor-grab hover:shadow-md transition-shadow ${node.color} text-white font-medium`}\n            draggable\n            onDragStart={(event) => onDragStart(event, node.type)}\n          >\n            {node.label}\n          </div>\n        ))}\n      </div>\n      <p className=\"text-xs text-muted-foreground mt-4\">\n        Drag a node to the canvas to add it to your campaign flow.\n      </p>\n    </div>\n  );\n};\n\nexport default NodePalette;\n"],"names":[],"mappings":";;;;AAAA;;AAGA,MAAM,YAAY;IAChB;QAAE,MAAM;QAAQ,OAAO;QAAiB,OAAO;IAAe;IAC9D;QAAE,MAAM;QAAW,OAAO;QAAgB,OAAO;IAAc;IAC/D;QAAE,MAAM;QAAS,OAAO;QAAc,OAAO;IAAgB;IAC7D;QAAE,MAAM;QAAY,OAAO;QAAiB,OAAO;IAAe;IAClE;QAAE,MAAM;QAAQ,OAAO;QAAa,OAAO;IAAa;CACzD;AAED,MAAM,cAAc;IAClB,MAAM,cAAc,CAAC,OAAwB;QAC3C,MAAM,YAAY,CAAC,OAAO,CAAC,yBAAyB;QACpD,MAAM,YAAY,CAAC,aAAa,GAAG;IACrC;IAEA,qBACE,6LAAC;;0BACC,6LAAC;gBAAG,WAAU;0BAA6C;;;;;;0BAC3D,6LAAC;gBAAI,WAAU;0BACZ,UAAU,GAAG,CAAC,CAAC,qBACd,6LAAC;wBAEC,WAAW,CAAC,oEAAoE,EAAE,KAAK,KAAK,CAAC,uBAAuB,CAAC;wBACrH,SAAS;wBACT,aAAa,CAAC,QAAU,YAAY,OAAO,KAAK,IAAI;kCAEnD,KAAK,KAAK;uBALN,KAAK,IAAI;;;;;;;;;;0BASpB,6LAAC;gBAAE,WAAU;0BAAqC;;;;;;;;;;;;AAKxD;KA1BM;uCA4BS","debugId":null}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/campaign-editor/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState } from \"react\";\nimport FlowchartEditor from \"@/components/Flowchart/FlowchartEditor\";\nimport NodePalette from \"@/components/Flowchart/NodePalette\";\nimport { Node, Edge } from \"reactflow\";\n\nconst CampaignEditorPage = () => {\n  const [flow, setFlow] = useState<{ nodes: Node[]; edges: Edge[] }>({ \n    nodes: [], \n    edges: [] \n  });\n  const [campaignName, setCampaignName] = useState(\"New Campaign\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const saveCampaign = async () => {\n    if (!campaignName.trim()) {\n      alert(\"Please enter a campaign name\");\n      return;\n    }\n\n    if (flow.nodes.length === 0) {\n      alert(\"Please add at least one node to your campaign\");\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"/api/campaign\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ \n          name: campaignName, \n          description: campaignDescription,\n          nodes: flow.nodes, \n          edges: flow.edges \n        }),\n      });\n      \n      const data = await response.json();\n      \n      if (response.ok) {\n        alert(`Campaign saved successfully! Campaign ID: ${data.campaignId}`);\n      } else {\n        alert(\"Error: \" + data.error);\n      }\n    } catch (error) {\n      console.error(\"Network error:\", error);\n      alert(\"Network error occurred while saving campaign\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const clearCanvas = () => {\n    if (confirm(\"Are you sure you want to clear the canvas? This will remove all nodes and connections.\")) {\n      setFlow({ nodes: [], edges: [] });\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen bg-background\">\n      {/* Header */}\n      <header className=\"p-4 border-b border-border bg-card\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-foreground\">Campaign Flow Editor</h1>\n            <p className=\"text-sm text-muted-foreground\">Design your campaign automation workflow</p>\n          </div>\n          <div className=\"flex items-center gap-4\">\n            <div className=\"flex flex-col gap-2\">\n              <input\n                type=\"text\"\n                value={campaignName}\n                onChange={(e) => setCampaignName(e.target.value)}\n                placeholder=\"Campaign Name\"\n                className=\"px-3 py-1 border border-border rounded text-sm bg-background text-foreground\"\n              />\n              <input\n                type=\"text\"\n                value={campaignDescription}\n                onChange={(e) => setCampaignDescription(e.target.value)}\n                placeholder=\"Campaign Description (optional)\"\n                className=\"px-3 py-1 border border-border rounded text-sm bg-background text-foreground\"\n              />\n            </div>\n            <button\n              onClick={clearCanvas}\n              className=\"px-4 py-2 bg-secondary text-secondary-foreground rounded hover:bg-secondary/80 transition-colors\"\n            >\n              Clear Canvas\n            </button>\n            <button\n              onClick={saveCampaign}\n              disabled={isLoading}\n              className=\"px-4 py-2 bg-primary text-primary-foreground rounded hover:bg-primary/90 transition-colors disabled:opacity-50\"\n            >\n              {isLoading ? \"Saving...\" : \"Save Campaign\"}\n            </button>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <div className=\"flex flex-1 overflow-hidden\">\n        {/* Left Sidebar - Node Palette */}\n        <aside className=\"w-64 p-4 border-r border-border bg-card overflow-y-auto\">\n          <NodePalette />\n        </aside>\n\n        {/* Central Canvas */}\n        <main className=\"flex-1 relative bg-background\">\n          <FlowchartEditor flow={flow} setFlow={setFlow} />\n        </main>\n\n        {/* Right Sidebar - JSON Preview */}\n        <aside className=\"w-80 p-4 border-l border-border bg-card overflow-y-auto\">\n          <div className=\"space-y-4\">\n            <div>\n              <h2 className=\"font-semibold text-foreground mb-2\">Campaign Stats</h2>\n              <div className=\"text-sm text-muted-foreground space-y-1\">\n                <p>Nodes: {flow.nodes.length}</p>\n                <p>Connections: {flow.edges.length}</p>\n              </div>\n            </div>\n            \n            <div>\n              <h2 className=\"font-semibold text-foreground mb-2\">Flow Structure</h2>\n              <pre className=\"text-xs bg-muted p-3 rounded overflow-auto max-h-96 text-muted-foreground\">\n                {JSON.stringify(\n                  {\n                    name: campaignName,\n                    description: campaignDescription,\n                    nodes: flow.nodes.map(node => ({\n                      id: node.id,\n                      type: node.data?.nodeType || 'default',\n                      label: node.data?.label || '',\n                      position: node.position\n                    })),\n                    edges: flow.edges.map(edge => ({\n                      id: edge.id,\n                      source: edge.source,\n                      target: edge.target\n                    }))\n                  }, \n                  null, \n                  2\n                )}\n              </pre>\n            </div>\n          </div>\n        </aside>\n      </div>\n    </div>\n  );\n};\n\nexport default CampaignEditorPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}